# ===============================================
# Variables de Entorno - Módulo GenAI
# ===============================================
# 
# Copia este archivo como .env y completa con tus API keys
# Comando: cp .env.example .env
#
# ⚠️ IMPORTANTE: Nunca subas el archivo .env a Git
# ===============================================

# ===== OpenAI (Principal) =====
# Obtén tu API key en: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-proj-...

# ===== Google Gemini (Recomendado) =====
# Obtén tu API key en: https://makersuite.google.com/app/apikey
GOOGLE_API_KEY=AIza...
# Alias alternativo
GEMINI_API_KEY=AIza...

# ===== Anthropic Claude (Opcional) =====
# Obtén tu API key en: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-...

# ===== Azure OpenAI (Opcional) =====
# Configura en Azure Portal
AZURE_OPENAI_API_KEY=...
AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/
AZURE_OPENAI_DEPLOYMENT_NAME=gpt-4
AZURE_OPENAI_API_VERSION=2024-02-01

# ===== LangSmith (Tracking y Monitoreo) =====
# Obtén tu API key en: https://smith.langchain.com/
LANGCHAIN_API_KEY=ls...
LANGCHAIN_TRACING_V2=true
LANGCHAIN_PROJECT=data-eng-genai
LANGCHAIN_ENDPOINT=https://api.smith.langchain.com

# ===== Configuración de Modelos por Defecto =====
DEFAULT_LLM_PROVIDER=openai  # openai, gemini, anthropic
DEFAULT_OPENAI_MODEL=gpt-3.5-turbo
DEFAULT_GEMINI_MODEL=gemini-1.5-flash
DEFAULT_EMBEDDING_MODEL=text-embedding-ada-002

# ===== Límites y Costos =====
MAX_TOKENS_PER_REQUEST=4000
TEMPERATURE_DEFAULT=0.7
ENABLE_CACHING=true

# ===== Vector Stores (Opcional) =====
# Pinecone
# PINECONE_API_KEY=...
# PINECONE_ENVIRONMENT=...

# Qdrant Cloud
# QDRANT_URL=...
# QDRANT_API_KEY=...

# ===== Bases de Datos (Para ejemplos) =====
# PostgreSQL
DATABASE_URL=postgresql://user:password@localhost:5432/dbname

# MongoDB
# MONGODB_URI=mongodb://localhost:27017/

# ===== Almacenamiento Cloud (Para ejemplos) =====
# AWS S3
# AWS_ACCESS_KEY_ID=...
# AWS_SECRET_ACCESS_KEY=...
# AWS_DEFAULT_REGION=us-east-1

# Google Cloud Storage
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json

# ===============================================
# Notas:
# - Los ejemplos funcionan principalmente con OpenAI y Gemini
# - Gemini es más económico para desarrollo (~75% más barato que GPT-3.5)
# - Para producción, considera usar ambos con fallback
# - Implementa rate limiting y monitoreo de costos
# ===============================================
